@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none], [fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none], [stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Cormorant";
  src: url(/fonts/Cormorant-Regular.woff2) format("woff2");
  font-style: normal;
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "Cormorant";
  src: url(/fonts/Cormorant-Light.woff2) format("woff2");
  font-style: normal;
  font-weight: 300;
  font-display: swap;
}
@font-face {
  font-family: "Cormorant";
  src: url(/fonts/Cormorant-LightItalic.woff2) format("woff2");
  font-style: italic;
  font-weight: 300;
  font-display: swap;
}
@font-face {
  font-family: "Open Sans";
  src: url(/fonts/OpenSans-SemiBold.woff2) format("woff2");
  font-style: normal;
  font-weight: 600;
  font-display: swap;
}
@font-face {
  font-family: "Open Sans";
  src: url(/fonts/OpenSans-Light.woff2) format("woff2");
  font-style: normal;
  font-weight: 300;
  font-display: swap;
}
@font-face {
  font-family: "Open Sans";
  src: url(/fonts/OpenSans-LightItalic.woff2) format("woff2");
  font-style: italic;
  font-weight: 300;
  font-display: swap;
}
:root {
  --color-dark: #151618;
  --color-light: #fff;
  --color-light-alt: #f7f2ea;
  --color-light-green: #b8b58b;
  --color-brown: #754e29;
  --border: 1px solid var(--color-dark);
  --button-height: 51px;
  --container-width: 1140px;
  --container-padding-x: 20px;
  --container-padding-Y: 75px;
  --font-family-base: "Cormorant", serif;
  --font-family-alt: "Open Sans", sans-serif;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 768px) {
  .hidden-tablet {
    display: none !important;
  }
}

@media (min-width: 769px) {
  .visible-tablet {
    display: none !important;
  }
}

body {
  font-size: clamp(16px, 1.5vw, 24px);
  font-family: var(--font-family-base);
  font-style: normal;
  line-height: 1.5;
  color: var(--color-dark);
  background-color: var(--color-light);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

.burger-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 40px;
  height: 20px;
  position: relative;
}
.burger-button::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 2px;
  top: 0;
  left: 0;
  background-color: var(--color-dark);
  box-shadow: 0 6px var(--color-dark), 0 12px var(--color-dark), 0 18px var(--color-dark);
}

.cross-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 40px;
  aspect-ratio: 1;
  position: relative;
}
.cross-button::before, .cross-button::after {
  position: absolute;
  content: "";
  width: 20px;
  height: 4px;
  translate: -50%;
  background-color: var(--color-brown);
  border-radius: 50px;
}
.cross-button::before {
  rotate: 45deg;
}
.cross-button::after {
  rotate: -45deg;
}

.tablet-overlay {
  margin: 0;
  padding: 0;
  margin-inline: auto;
  background-color: var(--color-light);
  border: none;
  width: 360px;
}
.tablet-overlay__close-button-wrapper {
  display: flex;
  justify-content: end;
  margin-bottom: 20px;
  margin-top: 20px;
  margin-right: 20px;
}
.tablet-overlay__list {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  row-gap: 30px;
  font-family: var(--font-family-base);
  font-size: 24px;
  margin-bottom: 60px;
}
.tablet-overlay__contacts {
  display: flex;
  justify-content: center;
  align-items: center;
  display: flex;
  flex-direction: column;
  row-gap: 35px;
  padding-block: 60px;
  font-family: var(-font-family-alt);
  font-size: 13px;
  border-top: 1px solid var(--color-light-alt);
}
.tablet-overlay__actions {
  display: flex;
  justify-content: center;
  align-items: center;
  padding-block: 20px;
  background-color: var(--color-light-alt);
}
.tablet-overlay__actions-list {
  display: flex;
  column-gap: 70px;
}

.header {
  --headerPaddingBlock: 60px;
  padding-block: var(--headerPaddingBlock);
}
@media (max-width: 1000px) {
  .header {
    --headerPaddingBlock: 30px;
  }
}
@media (max-width: 768px) {
  .header {
    --container-padding-x: 60px;
  }
}
@media (max-width: 480px) {
  .header {
    --container-padding-x: 10px;
  }
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__logo {
  flex-shrink: 0;
}
@media (min-width: 1001px) {
  .header__logo {
    margin-top: -30px;
  }
}
@media (max-width: 768px) {
  .header__logo {
    margin-right: -70px;
  }
}
@media (min-width: 769px) {
  .header__logo {
    margin-right: 60px;
  }
}
@media (max-width: 480px) {
  .header__logo {
    margin-right: -90px;
    width: 40px;
    height: 56px;
  }
}
.header__menu {
  font-family: var(--font-family-alt);
  font-size: 18px;
}
@media (max-width: 1000px) {
  .header__menu {
    margin-right: auto;
  }
}
.header__menu-list {
  display: flex;
  align-items: center;
  column-gap: 65px;
}
@media (max-width: 850px) {
  .header__menu-list {
    column-gap: 50px;
  }
}
.header__menu-link {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: 30px;
  transition-duration: var(--transition-duration);
}
@media (hover: hover) {
  .header__menu-link:hover {
    color: var(--color-brown);
  }
  .header__menu-link:hover::after {
    width: 100%;
    color: currentColor;
  }
}
@media (hover: none) {
  .header__menu-link:active {
    color: var(--color-brown);
  }
  .header__menu-link:active::after {
    width: 100%;
    color: currentColor;
  }
}
.header__menu-link::after {
  position: absolute;
  content: "";
  width: 0px;
  height: 2px;
  top: 100%;
  left: 50%;
  translate: -50%;
  background-color: currentColor;
  transition-duration: inherit;
}
.header__actions-list {
  display: inline-flex;
  align-items: center;
  column-gap: 20px;
}
.header__actions-item:last-child {
  margin-left: 80px;
}
@media (hover: hover) {
  .header__actions-item:hover {
    color: var(--color-brown);
    transition-duration: var(--transition-duration);
  }
}
@media (hover: none) {
  .header__actions-item:active {
    color: var(--color-brown);
    transition-duration: var(--transition-duration);
  }
}
@media (max-width: 1000px) {
  .header__actions-item:last-child {
    margin-left: 30px;
  }
}
@media (max-width: 360px) {
  .header__actions-item:last-child {
    margin-left: 10px;
  }
}/*# sourceMappingURL=styles.css.map */